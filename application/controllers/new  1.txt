<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');

class Resturant extends CI_Controller {

	/**
	 * Index Page for this controller.
	 *
	 * Maps to the following URL
	
	 */	 
	function __construct()
    {
        parent::__construct();
	 
	    $this->load->library('template');
        $this->template->prepend_metadata('<link href="/opensnap/assets/css/style.css" rel="stylesheet" type="text/css">');
        $this->template->prepend_metadata('<script language="javascript" src="images/menu.js"></script>');

        $this->load->helper('url');
        $this->load->library('opensnap');

    }
	
	private function _getDefaultSearchParams()
	{
	    $params = array(); 
	    $params['city_id']=1;
		$params['page']=1;
		$params['per_page']=24;
		$params['keyword']='';
		$params['free_text_tag']='';
		$params['free_text_tag_id']='';
		$params['photo_poi_type']='';
		$params['snap_poi_id']='';
		$params['or_poi_id']='';
		$params['or_region_id']='';
		$params['photo_sub_type']='';
		$params['dish_name']='';
		$params['cuisine_id']='';
		$params['district_id']='';
		$params['landmark_id']='';
		$params['amenity_id']='';
		$params['dish_id']='';
		$params['maplat']='';
		$params['maplng']='';
	    
		return $params; 

    } 
	
	 
	public function index()
	{   
	
		$params =  $this->_getDefaultSearchParams();
		$data = array();
		
		$data['current_tab'] = (trim($this->input->post("current_tab")) != '' )?$this->input->post("current_tab"):'#tab1';
		$data['search_sav'] = (trim($this->input->post("search")) != '' )?$this->input->post("search"):$this->input->post("search_sav");
		$data['search_type'] = (trim($this->input->post("search_type")) != '' )?$this->input->post("search_type"):$this->input->post("search_type");
		
	    $results = $this->_searchLatest($params);
			
		$data['latest'] = $this->_parseSearchResults($results);
		
		$params['page']=1;
        $results = $this->_searchTop($params);
		$data['top'] = $this->_parseSearchResults($results);	
	  
        $this->_displayPhotoGrid($data);  		
		
	} 
	
    public function photodetail($id)
	{
	   
       $results =  $this->_getPhotodetail($id);  
       $results = $this->_parsePhotoDetails($results);
	   $data = array();
	   $data['photo_url'] = $photo_detail->LargePhotoUrl;
	   $data['photo_title'] = $photo_detail->DishName;
	   $data['resturant_name']  = $photo_detail->Poi[0]->Name;
	   
       $this->template->set_layout('photodetail');
	   $this->template->build('photodetail',$data);
	 
	}
	
	private function _getPhotodetail($photo_id)
	{  
	   $params = array();
	   $params['photo_id'] = $photo_id;
	   return $this->opensnap->api_ApiGetPhotoDetail_photo_getdetail($params);
	    
    }
	public function scrollpagination_old()
	{ 
	    $params = array();
		
		$search_sav = trim($this->input->get("search_sav"));
		$current_tab = trim($this->input->get("current_tab"));
		$offset = trim($this->input->get("offset"));
		$nop =  trim($this->input->get("nop"));
		
	    $params =  $this->_getDefaultSearchParams();	
		$keyword =  preg_replace('/\(All Branches\)/i', ' ', $search_sav);	
		$params['keyword']= "'".trim($keyword)."'";
			
		$params['page']= ceil($offset/$nop);
		
		if($current_tab == '#tabr2'){		
          $results = $this->_searchTop($params);
	  	}else{	
	      $results = $this->_searchLatest($params);
		}
		
		$results = $this->_parseSearchResults($results);	
	  
	    $html = array();
		
	   	if( $results['error']['true'] )
	    {		
		 	
		   $html[] = '<div class="box">'.$latest['error']['description'].'</div>';
		
		}else{ 
		 
		  if(count($results['photos_photos']))
		  {
			foreach($results['photos_photos'] as $photo)
			{ 		
				$html[] = '<div class="box">
							<div class="boxInner">
							 <a href="'. site_url('resturant/photodetail').'/'. $photo->SnapPhotoId .'"><img src="'.$photo->SmallPhotoUrl.'"/></a>
							<div class="titleBox">'.$photo->DishName .'</div>
						  </div>';
			}	     		 
	      }
	    }	
	      	 
        echo json_encode($html);
		
        //$this->_displayPhotoGrid($data);  		
	}
	public function scrollpagination()
	{ 
	    $params = array();
		
		$search_sav = trim($this->input->get("search_sav"));
		$current_tab = trim($this->input->get("current_tab"));
		$offset = trim($this->input->get("offset"));
		$nop =  trim($this->input->get("nop"));
		
	    $params =  $this->_getDefaultSearchParams();	
		$keyword =  preg_replace('/\(All Branches\)/i', ' ', $search_sav);	
		$params['keyword']= "'".trim($keyword)."'";
			
		$params['page']= (ceil($offset/$nop)<2)?2:ceil($offset/$nop);
		
		if($current_tab == '#tabr2'){		
          $results = $this->_searchTop($params);
	  	}else{	
	      $results = $this->_searchLatest($params);
		}
		
		$data['data'] = $this->_parseSearchResults($results);	
	  
        $this->load->view('partials/photoblock',$data);
		
      		
	}
	public function search()
	{ 
	    $params = array();
		$data = array();
		
		$data['current_tab'] = (trim($this->input->post("current_tab")) != '' )?$this->input->post("current_tab"):'#tabr1';
		$data['search_sav'] = (trim($this->input->post("search")) != '' )?$this->input->post("search"):$this->input->post("search_sav");	
		$data['search_type'] = (trim($this->input->post("search_type")) != '' )?$this->input->post("search_type"):$this->input->post("search_type");
		
	    $params =  $this->_getDefaultSearchParams();
		$options =  $this->_buildSearchOptions($data);
		$params +=  $options;
					
		$params['page']=1;
	    $results = $this->_searchLatest($params);
		
		$data['latest'] = $this->_parseSearchResults($results);
        $results = $this->_searchTop($params);
		$data['top'] = $this->_parseSearchResults($results);	
	  
        $this->_displayPhotoGrid($data);  		
	}
	
	private function _buildSearchOptions($params){
	
	  $options = array();
	  
	  switch($params['search_type']){
	  
	    case 2:
                 break; 
			   
        case 3:
                 break;
			   
        case 4:
                 break; 
			   
        case 5:
                 break;
       
        case 10:
                 break; 
			   
        case 11:
                 break;
			   
        case 12: $options['dish_name']= "'".trim($params['search_sav'])."'";  
    	  	     break; 
			   
        case 13:
                 break;
        
		case  14: 
        default : $keyword =  preg_replace('/\(All Branches\)/i', ' ', $params['search_sav']);	
		          $options['keyword']= "'".trim($keyword)."'";  			   
 			   	  
	  }
	  	  
	   return $options;
	
	}
	
	private function _searchLatest($params)
	{
	   $params = $params;
	   $params['order_by']='submittime';
	   return $this->opensnap->api_ApiGetPhotoListLatest_photo_getlist($params);
	    
    }
	
	private function _searchTop($params)
	{

	   $params['order_by']='24hourslikecount';
	   return $this->opensnap->api_ApiGetPhotoListTop_photo_getlist($params);
	    
    }
	
    private function _parsePhotoDetails($response)
	{	
	  	$data = array();			
		$data['response'] = $response;
		
		$body = json_decode($data['response']['body']);
		$System =  $body->Root->System[0];
		$Data   =  $body->Root->Data[0];
		$data['error'] = array();
		$data['error']['true'] = ( $data['response']['response_info']['http_code'] == '' ||  isset( $Data->Errors) )?TRUE:FALSE; 
				
		$data['Status'] = $System->Status || $data['response']['response_info']['http_code'];
		$data['photos_total_count'] = 0; 
				
		if( $data['error']['true'] )
		{    
				if($data['Status'] == '200')
				{   
					$data['error']['description'] = $Data->Errors[0]->Error[0]->ErrorDescription;
			        $data['error']['id'] = $Data->Errors[0]->Error[0]->Id;
				 
				}else{
				  
					$data['error']['description'] = 'Url ' . $data['request'] . ' cannot be reached';
			        $data['error']['id'] = '404';
				}
		     		  			
		}else{
		         			
				$data['photo_detail'] = $Data->Photo[0];	
		}
		     return $data;  			
				
	} 
     	
	private function _parseSearchResults($response)
	{	
	  	$data = array();			
		$data['response'] = $response;
		
		$body = json_decode($data['response']['body']);
		$System =  $body->Root->System[0];
		$Data   =  $body->Root->Data[0];
		$data['error'] = array();
		$data['error']['true'] = ( $data['response']['response_info']['http_code'] == '' ||  isset( $Data->Errors) )?TRUE:FALSE; 
				
		$data['Status'] = $System->Status || $data['response']['response_info']['http_code'];
		$data['photos_total_count'] = 0; 
		
			
		if( $data['error']['true'] )
		{    
				if($data['Status'] == '200')
				{   
					$data['error']['description'] = $Data->Errors[0]->Error[0]->ErrorDescription;
			        $data['error']['id'] = $Data->Errors[0]->Error[0]->Id;
				 
				}else{
				  
					$data['error']['description'] = 'Url ' . $data['request'] . ' cannot be reached';
			        $data['error']['id'] = '404';
				}
		     		  			
		}else{
		        
				$Photos =  $Data->Photos[0];
								
				$data['photos_total_count'] = $Photos->total;
				$data['photos_total_text']  = $Photos->TotalText;
				$data['photos_page_no']     = $Photos->page;
				$data['photos_page_limit']  = $Photos->limit;
				$data['photos_page_count']  = $Photos->count;
				$data['photos_photos']	    = $Photos->Photo;	 
				$data['TagDetail']          = $Data->TagDetail;
				$data['Check']              = $System->Check;
				$data['Version']            = $System->Version;
		
		}
		    return $data;  			
				
	}
	
	private function _displayPhotoGrid($data){
	    $this->template->set_layout('listing_layout');
		$this->template->build('photoslist',$data);	
    } 				
			
}
/* End of file resturant.php */
/* Location: ./application/controllers/resturant.php */